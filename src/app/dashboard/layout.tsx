"use client";

// import type { Metadata } from "next";
import "../globals.css";
import { SidebarInset, SidebarProvider } from "@/components/ui/sidebar";
import { SiteHeader } from "@/components/site-header";
import { AppSidebar } from "@/components/app-sidebar";
import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { PAGES } from "@/constants/constants";
import PageLoader from "@/components/page-loader";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

// export const metadata: Metadata = {
//   title: "Home ~ Valse",
//   description: "Generated by create next app",
// };

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      refetchInterval: 10000,
    },
  },
});

const RootLayout = ({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) => {
  const [loading, setLoading] = useState(true);
  const { push } = useRouter();

  useEffect(() => {
    const data = localStorage.getItem("spotify_auth_data");

    if (!data) {
      push(PAGES.auth);
      return;
    }

    const { expires_at } = JSON.parse(data);
    const date_ms = new Date().getTime();

    if (date_ms >= expires_at) {
      localStorage.removeItem("spotify_auth_data");
      push(PAGES.auth);
      return;
    }

    setLoading(false);
  }, [push]);

  return (
    <html lang="en">
      <body className="antialiased dark">
        <QueryClientProvider client={queryClient}>
          <div className="[--header-height:calc(theme(spacing.14))]">
            <SidebarProvider className="flex flex-col">
              <SiteHeader />
              {loading ? (
                <PageLoader fullScreen />
              ) : (
                <div className="flex flex-1 max-w-[1600px]">
                  <AppSidebar />
                  <SidebarInset>{children}</SidebarInset>
                </div>
              )}
            </SidebarProvider>
          </div>
        </QueryClientProvider>
      </body>
    </html>
  );
};

export default RootLayout;
